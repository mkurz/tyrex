<project name="Tyrex" default="main" basedir=".">

  <property name="source" value="src" />
  <property name="build" value="build" />
  <property name="classes" value="${build}/classes" />
  <property name="dist" value="dist" />
  <property name="lib" value="lib" />
  <property name="doc" value="doc" />
  <property name="tomcat" value="tomcat" />

  <property name="classpath" value="${classes}" />
  <property name="build.compiler" file="classic" />
  <property file="${source}/VERSION" />

  <property name="jar.name" value="tyrex-${version}"/>


  <target name="list">
    <echo message="ANT build for Tyrex ${version}\n
The following targets are available\n
  all       Build all Java packages\n
  jar       Build ${jar.name}.jar\n
  javadoc   Builds the API docs\n" />
  </target>


  <!-- Prepare target directories -->
  <target name="prepare">
    <mkdir dir="${build}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
  </target>


  <!-- Kill all the directories created in prepare -->
  <target name="clean">
    <deltree dir="${build}"/>
    <deltree dir="${dist}"/>
  </target>


  <!-- Same as core, but also cleans -->
  <target name="all" depends="clean,main"/>

  <target name="release" depends="clean,all.release,jar">
  </target>


  <!-- Build all the sources with debug and deprecation -->
  <target name="main" depends="prepare">
    <javac srcdir="${source}/main" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>


  <!-- Same as main, but no debug and no deprecation -->
  <target name="all.release" depends="prepare">
    <javac srcdir="${source}/main" destdir="${classes}"
           classpath="${classpath}" debug="off" deprecation="off"/>
  </target>

  
  <target name="jar" depends="clean,all.release">
    <deltree dir="${dist}/${jar.name}.jar" />

    <copyfile src="${source}/etc/MANIFEST.MF" dest="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" token="$$VERSION$$" value="${version}"/>
    <copyfile src="${source}/etc/LICENSE" dest="${classes}/LICENSE" />
    <copyfile src="${source}/etc/README" dest="${classes}/README" />
    <copyfile src="${source}/etc/CHANGELOG" dest="${classes}/CHANGELOG" />

    <copyfile src="${source}/etc/tyrex.xml" dest="${classes}/tyrex.xml" />
    <copyfile src="${source}/etc/resources.xml" dest="${classes}/resources.xml" />
    <copyfile src="${source}/etc/jndi.properties" dest="${classes}/jndi.properties" />

    <jar jarfile="${dist}/${jar.name}.jar" basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" items="LICENSE,README,CHANGELOG,
         tyrex.xml,resources.xml,jndi.properties,tyrex,org,com" />

    <java class="Install" args="${dist}/${jar.name}.jar -n" />
  </target>


  <target name="tests" depends="prepare">
    <mkdir dir="${build}/tests" />
    <javac srcdir="${source}/tests" destdir="${build}/tests"
           classpath="${classpath}" debug="on" deprecation="${deprecation}"/>
  </target>



  <target name="install">
    <java class="Install" args="${dist}/${jar.name}.jar -i -v" />
  </target>


  <target name="javadoc" depends="prepare">
    <mkdir dir="${build}/javadoc" />
    <exec command="javadoc -sourcepath ${source}/main -d ${build}/javadoc
                           -doctitle Tyrex -public -noindex -author
                           tyrex.server tyrex.conf tyrex.naming" />

    <jar jarfile="${dist}/${jar.name}-doc.jar" basedir="${build}"
         items="javadoc" />
  </target>


  <!-- Targets for individual packages -->
  <target name="tyrex.server" depends="prepare">
    <javac srcdir="${source}/main/tyrex/server"
           destdir="${tyrex.class}/tyrex/server"
           classpath="${classpath}" debug="on"/>
  </target>


  <target name="tar" depends="prepare">
    <deltree  dir="${dist}/tyrex-${version}.tar.Z" />
    <exec command="tar --create --exclude-from ${source}/etc/exclude
                       --dereference
                       build.sh ${source} ${lib} ${doc}"
          output="${dist}/tyrex-${version}-src.tar" />
    <exec command="compress ${dist}/tyrex-${version}-src.tar" />
  </target>


  <target name="tomcat" depends="prepare">
    <deltree  dir="${dist}/tomcat-tyrex-${version}.tar.Z" />
    <copyfile src="${source}/etc/tyrex.xml"
              dest="${tomcat}/tyrex.xml" />
    <copyfile src="${source}/etc/jndi.properties"
              dest="${tomcat}/jndi.properties" />
    <copyfile src="${dist}/tyrex-${version}.jar"
              dest="${tomcat}/lib/tyrex-${version}.jar" />
    <exec command="tar --create --compress
                       --exclude-from ${source}/etc/exclude
                       ${tomcat}"
          output="${dist}/tomcat-tyrex-${version}.tar.Z" />
  </target>


</project>
