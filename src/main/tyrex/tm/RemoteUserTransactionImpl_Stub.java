// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package tyrex.tm;

public final class RemoteUserTransactionImpl_Stub
    extends java.rmi.server.RemoteStub
    implements tyrex.client.RemoteUserTransaction, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_begin_0;
    private static java.lang.reflect.Method $method_commit_1;
    private static java.lang.reflect.Method $method_getStatus_2;
    private static java.lang.reflect.Method $method_rollback_3;
    private static java.lang.reflect.Method $method_setRollbackOnly_4;
    private static java.lang.reflect.Method $method_setTransactionTimeout_5;
    
    static {
	try {
	    $method_begin_0 = tyrex.client.RemoteUserTransaction.class.getMethod("begin", new java.lang.Class[] {});
	    $method_commit_1 = tyrex.client.RemoteUserTransaction.class.getMethod("commit", new java.lang.Class[] {byte[].class});
	    $method_getStatus_2 = tyrex.client.RemoteUserTransaction.class.getMethod("getStatus", new java.lang.Class[] {byte[].class});
	    $method_rollback_3 = tyrex.client.RemoteUserTransaction.class.getMethod("rollback", new java.lang.Class[] {byte[].class});
	    $method_setRollbackOnly_4 = tyrex.client.RemoteUserTransaction.class.getMethod("setRollbackOnly", new java.lang.Class[] {byte[].class});
	    $method_setTransactionTimeout_5 = tyrex.client.RemoteUserTransaction.class.getMethod("setTransactionTimeout", new java.lang.Class[] {byte[].class, int.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RemoteUserTransactionImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of begin()
    public byte[] begin()
	throws java.rmi.RemoteException, javax.transaction.SystemException
    {
	try {
	    Object $result = ref.invoke(this, $method_begin_0, null, 7034486044939669013L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (javax.transaction.SystemException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of commit(byte[])
    public void commit(byte[] $param_arrayOf_byte_1)
	throws java.lang.IllegalStateException, java.rmi.RemoteException, javax.transaction.HeuristicMixedException, javax.transaction.HeuristicRollbackException, javax.transaction.RollbackException, javax.transaction.SystemException
    {
	try {
	    ref.invoke(this, $method_commit_1, new java.lang.Object[] {$param_arrayOf_byte_1}, 4716932303149370369L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (javax.transaction.HeuristicMixedException e) {
	    throw e;
	} catch (javax.transaction.HeuristicRollbackException e) {
	    throw e;
	} catch (javax.transaction.RollbackException e) {
	    throw e;
	} catch (javax.transaction.SystemException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getStatus(byte[])
    public int getStatus(byte[] $param_arrayOf_byte_1)
	throws java.rmi.RemoteException, javax.transaction.SystemException
    {
	try {
	    Object $result = ref.invoke(this, $method_getStatus_2, new java.lang.Object[] {$param_arrayOf_byte_1}, -8457648397126643009L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (javax.transaction.SystemException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of rollback(byte[])
    public void rollback(byte[] $param_arrayOf_byte_1)
	throws java.lang.IllegalStateException, java.rmi.RemoteException, javax.transaction.SystemException
    {
	try {
	    ref.invoke(this, $method_rollback_3, new java.lang.Object[] {$param_arrayOf_byte_1}, -7331150949922038118L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (javax.transaction.SystemException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setRollbackOnly(byte[])
    public void setRollbackOnly(byte[] $param_arrayOf_byte_1)
	throws java.lang.IllegalStateException, java.rmi.RemoteException, javax.transaction.SystemException
    {
	try {
	    ref.invoke(this, $method_setRollbackOnly_4, new java.lang.Object[] {$param_arrayOf_byte_1}, -1179952986326086612L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (javax.transaction.SystemException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setTransactionTimeout(byte[], int)
    public void setTransactionTimeout(byte[] $param_arrayOf_byte_1, int $param_int_2)
	throws java.rmi.RemoteException, javax.transaction.SystemException
    {
	try {
	    ref.invoke(this, $method_setTransactionTimeout_5, new java.lang.Object[] {$param_arrayOf_byte_1, new java.lang.Integer($param_int_2)}, 6042457875036758113L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (javax.transaction.SystemException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
