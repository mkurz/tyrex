<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE document SYSTEM "document.dtd">
<document url="http://tyrex.exolab.org/ots.xml">
  <properties>
    <author email="jdaniel@intalio.com">Jerome DANIEL</author>
  </properties>
  <body>

    <section title="Introduction">
        <p>
        This document quickly explains how to configure OpenORB to run Tyrex as an OTS. It also explains
        how to start Tyrex as an OTS server.
        </p>
    </section>
    
    <section title="How to configure Tyrex to be used as an OTS?">
    	<p>
    	Extend your classpath by adding the OpenORB jar file and the 'ots.jar' file provided with the Tyrex distribution. Start the Tyrex build
    	file by supplying the following argument : <b>iiop</b>. After the build, a jar file named 'tyrex-X.X.X-iiop.jar' is available. Add this
    	jar file in your classpath.
    	<p/>
    </section>
    
    <section title="How to configure OpenORB to run Tyrex ?">
    	<p>
    	To configure OpenORB, please edit the OpenORB configuration file ( OpenORB.xml ). Defines a new
    	module to describe the OTS :
    	<br/>
    	<code>
    	&gt;module name="tyrex" initializer="tyrex.corba.Initializer" /&lt;
    	</code>
    	<br/>
    	Then, define a new profile :
    	<br/>
    	<code>
    	&gt;profile name="ots" extends="default"&lt;
    	  &gt;import module="transaction" /&lt;
  	&gt;/profile&lt;
    	</code>
    	<br/>
    	When you start a CORBA application that want to use the Tyrex OTS, be sure to use the <t>ots</t> profile. For example,
    	you can specify from the command line : <b>-ORBProfile=ots</b>
    	<br/>
    	To be able to resolve the 'TransactionService' initial reference, you have to extend the <b>InitRef</b> module, by adding :
    	<br>
    	<code>
    	&gt;property name="TransactionService" value="corbaname:rir:#tyrex/TransactionFactory" /&lt;
    	</code>
    	<br/>
    	</p>
    </section>
        
    <section title="How to start Tyrex as an OTS server ?">
        <p>
        To start Tyrex as an OTS server, just start the following class :
        <br/>
        <b>java tyrex.corba.OTSServer</b>
        <br/>
        Several options are available :
        <br/>
        -naming : this option is used to bind the transaction factory to the naming service 
        with the following name tyrex\TransactionFactory
        <br/>
        -ior : this option implies the generation of a file named 'ots.ior' that contains the 
        transaction factory IOR.
        <br/>
        -log : this option is used to activate the log mechanism ( for recovery ). By the way, this 
        option is used to specify the log files directory, example : -log /home/me/tyrex/logs
        <br/>
        -recover : this option is used to activate the recovery mechanism. If you start the recovery
        be  sure to use at the same time the '-log' option to specify the log files directory.
        </p>                      
    </section>

    <section title="Problems">
        <p>If you encounter problems with the OTS server send a detailed email to 
        <a href="mailto:tyrex-dev@exolab.org">Tyrex Developer's Mailing List</a>.
        </p>
        <p>
        The email should contain:
        <ul>
        <li>A stacktrace if one is available</li>
        <li>The database used, including version number, if one is used</li>
        <li>The JDBC driver version number, if one is used</li>
        <li>Instructions on how to reproduce the problem</li>        
        <li>Version of OpenORB, and a copy of your OpenORB.xml file</li>
        </ul>
        </p>
    </section>

  </body>
</document>